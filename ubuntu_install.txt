
Ubuntu Linux

# avoid download security packages on slow network connection durign installation.
# enable network but unplug or disconnect network cable for fast installation.

# virtualbox network: Bridged Adapter,
# clone virtual machine in virtualbox,
# generate new MAC addresses for all network adapters.

# add the debian installation image .iso file in cdrom, install from cdrom.

$ apt-cdrom add
Using CD-ROM mount point /media/cdrom/
$

# E: The repository 'cdrom://[Debian GNU/Linux 12.7.0] bookworm Release' does not have a Release file.
# add: [trusted=yes]
#
$ cat /etc/apt/sources.list
deb [trusted=yes] cdrom:[Ubuntu-Server 24.10 _Oracular Oriole_ - Release amd64 (20241007.1)]/ oracular main restricted
$
$ apt list
$

$ su -c "apt install sudo"
$ grep sudo /etc/group
$ su -c "/usr/sbin/usermod -a -G sudo `whoami`"
$ sg sudo
$ groups
sudo
$

$ apt install sudo openssh-server build-essential gdb cmake automake autoconf libtool pkg-config gettext manpages-dev
$

$ ls /sys/class/net/
ens33
$
$ ip addr
$

# dynamic ip
$ vi /etc/network/interfaces
auto ens33
allow-hotplug ens33
iface ens33 inet dhcp
$

# static ip
$ vi /etc/network/interfaces
auto ens33
allow-hotplug ens33
iface ens33 inet static
  address 192.168.1.2/24
  gateway 192.157.1.1
$
$ /usr/sbin/ifup ens33
$ /usr/sbin/ifdown ens33
$ ethtool ens33
$

$ vi /etc/NetworkManager/system-connections/ens33.nmconnection
[ipv4]
method=auto
#method=manual
#address1=192.168.1.5/24,192.168.1.1
#dns=192.168.1.1;8.8.8.8;
$
$ systemctl restart NetworkManager

# dynamic ip address
$ vi /etc/netplan/99-config.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      dhcp4: true

$

# replace `dhcp4` with static ip, dns,
$ vi /etc/netplan/99-config.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      addresses:
        - 192.168.1.123/24
      routes:
        - to: default
          via: 192.168.1.1
      nameservers:
        search: [mydomain, otherdomain]
        addresses: [192.168.1.1, 8.8.8.8]

$
$ netplan apply

# dns, use netplan configuration instead,
# $ vi /etc/resolv.conf
# nameserver 192.168.1.1
# nameserver 8.8.8.8
# $

$ ping ubuntu.com
$
# oracular is codename of ubuntu 24.10
$ grep -i codename /etc/os-release
VERSION_CODENAME=oracular
UBUNTU_CODENAME=oracular
$
$ lsb_release -a | grep -i codename
Codename:       oracular
$

# deb822 format, ubuntu 24.04 or latter,

$ vi /etc/apt/sources.list.d/ubuntu.sources
# Types: deb
# URIs: http://archive.ubuntu.com/ubuntu/
# Suites: oracular oracular-updates oracular-backports
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

# Types: deb
# URIs: http://security.ubuntu.com/ubuntu/
# Suites: oracular-security
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

Types: deb
URIs: https://mirrors.tuna.tsinghua.edu.cn/ubuntu
Suites: oracular oracular-updates oracular-backports
Components: main restricted universe multiverse
Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

Types: deb
URIs: https://mirrors.tuna.tsinghua.edu.cn/ubuntu
Suites: oracular-security
Components: main restricted universe multiverse
Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
$

# older foramt,

$ cp /etc/apt/sources.list /etc/apt/sources.list.bak
$ sed -i "s@http://.*archive.ubuntu.com@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
$ sed -i "s@http://.*security.ubuntu.com@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
$
$ vi /etc/apt/sources.list
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular           main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular-updates   main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular-backports main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular-security  main restricted universe multiverse
$

$ vi /etc/apt/sources.list
deb https://mirror.nyist.edu.cn/debian/          bookworm            main contrib non-free non-free-firmware
deb https://mirror.nyist.edu.cn/debian/          bookworm-updates    main contrib non-free non-free-firmware
deb https://mirror.nyist.edu.cn/debian/          bookworm-backports  main contrib non-free non-free-firmware
deb https://mirror.nyist.edu.cn/debian-security  bookworm-security   main contrib non-free non-free-firmware
$

$ apt update
$ apt upgrade
$ apt autoremove

$ vi ~/.inputrc  # readline
set editing-mode vi
$

# environment variables in ~/.profile, eg. PATH
$ vi ~/.bashrc
alias ls="ls --color=never"
alias tree="tree -n"
EDITOR=$(which vi)  # update-alternative --config EDITOR

export HISTCONTROL="ignoredups:erasedups:ignorespace"
export PROMPT_COMMAND='history -a'
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:../boost_1_73_0/stage/lib
export PATH=$PATH:../boost_1_73_0/stage/lib

PS1='\$ '
set -o vi  # set editing-mode vi # ~/.inputrc,
stty -ixon  # terminal flow control Ctrl-S conflicts with vim, emacs.
#stty columns 80
ulimit -c unlimited  # systemd-coredump
$

$ touch ~/.hushlogin
$

$ apt install vim  # vim-tiny pre-installed
$ update-alternatives --config editor
$ vi -u ~/.vimrc ~/.vimrc
set hlsearch
set incsearch
set nocompatible " vim-tiny, u always undo, Ctrl-r always redo,
set nowrapscan
"syntax off
$

$ apt list --installed ifupdown openssh-server isc-dhcp-client sudo
$

# list content of installed package
$ dpkg -L gcc
/usr/bin/c99-gcc
/usr/bin/gcc
$

# which installed package has the file
$ dpkg -S /usr/bin/gcc
gcc: /usr/bin/c99-gcc
$

$ apt install apt-file
$ apt-file update
$
# package content
$ apt-file list gcc
gcc: /usr/bin/c99-gcc
gcc: /usr/bin/gcc
$

# query package name by a file
$ apt-file --package-only search /usr/bin/gcc
gcc
gcc-11
$

$ apt install openssh-server samba
$ systemctl enable ssh smbd nmbd
$ systemctl start ssh smbd nmbd
$ sudo smbpasswd -a `whoami`
$ vi /etc/samba/smb.conf
[homes]
  read only = no
  create mask = 0755
  directory mask = 0755
$

# firewall
$ systemctl disable ufw
$ ufw app list
$ ufw allow Samba

# LeakSanitizer does not work under ptrace (strace, gdb)
# Address Sanitizer (asan) will report memory usage problems
# by running a program built with asan. do not run it in a debugger.

$ apt install build-essential
$ apt install gdb  # gdb-minimal in installation image .iso
$ apt install cmake
$ apt install automake autoconf libtool pkg-config gettext
$ apt install gcc-doc gdb-doc manpages-dev
$ apt install clang llvm lldb libc++-dev libc++abi-dev
$

$ apt install systemd-coredump  # ubuntu default: apport-core-dump-handler,
$ coredumpctl debug # gdb backtrace: bt

# apport collects and sends crash report for packaged softwares
# on production system on user side.
$ cat ~/.config/apport/settings
[main]
unpackaged=true
$
$ systemctl restart apport
$ apport-unpack /var/crash/_home_ljh_a.out.1000.crash ~/temp
$ gdb `cat ~/temp/ExecutablePath` ~/temp/CoreDump

# VSCode, cpptools, clangd, CodeLLDB
$ apt install ./code_1.86.1-1707298119_amd64.deb
$ dpkg -i code_1.86.1-1707298119_amd64.deb
$ apt install -f  # Install dependencies
$ /usr/bin/code
$

# https://clangd.llvm.org/installation
$ apt install clangd
$ apt install clangd-13
$ update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-13 100
$

# install multiple gcc compiler versions
$ apt install gcc-10 gcc-9
$

$ update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90
$ update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100
$ update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
$ update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100
$

# mode: auto, manual. priority matters in auto mode.
$ update-alternatives --config gcc
$ update-alternatives --config g++
$ gcc --version
$ g++ --version
$

# tree using find
$ find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
$

# find large size directories or files (use -h in both commands)
$ du -h -d1 /home/* | sort -hr | head -5
$

$ timedatectl list-timezones
$ timedatectl set-timezone "Asia/Shanghai"
$ /usr/sbin/dpkg-reconfigure tzdata
$

# Console Font: VGA
$ /usr/sbin/dpkg-reconfigure console-setup
$

$ ls -l /etc/systemd/system/default.target
/etc/systemd/system/default.target -> /lib/systemd/system/multi-user.target
$ systemctl get-default
graphical.target
$ systemctl set-default multi-user.target  # graphical.target
$ init 3  # 5
$

# resize lvm volume to use unallocated free space
$ df -h
Filesystem                         Size  Used Avail Use% Mounted on
/dev/mapper/ubuntu--vg-ubuntu--lv   17G  6.4G  8.9G  42% /
/dev/sda2                          2.0G  186M  1.7G  11% /boot
$
$ lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk
├─sda1                      8:1    0    1M  0 part
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0   33G  0 part
  └─ubuntu--vg-ubuntu--lv 252:0    0 16.5G  0 lvm  /
sr0                        11:0    1 1024M  0 rom
$
$ pvresize /dev/sda3
$ lvextend  -r  -l  +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv
$ resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv
$

$ fdisk /dev/sdb
$ mkfs.ext4 /dev/sdb1
$ mkdir /mnt/data
$ mount /dev/sdb1 /mnt/data
$

$ vi /etc/fstab
  /dev/sdb1 /mnt/data ext4 defaults 0 0
  /dev/sr0 /media/cdrom0
$
$ mount /mnt/data/

$ df -h
/dev/sr0 3.7G /media/cdrom0
$

# resize disk partition
$ apt install gparted
# Disks / Delete swap partition / Delete extended partition
#  / resize: reserve 1.0 GB (same) free space for extended and swap
#  / create extended partition / create swap partition
#

# page down to select and add zh_CN.UTF-8 locale
# keep the default locale (en_US.UTF-8)
$ dpkg-reconfigure locales
$

# chinese input method editor (ime)
  Settings / Region & Language / Manage Installed Languages / Language
  / Install Remove Languages... / Chinese (Simplified): * / Apply
# restart required
# add an input source
  Settings / Keyboard / Input Sources / + / Chinese
  / Chinese (intelligent pinyin) / Add

$ apt install ibus-libpinyin
$ dpkg-reconfigure locales
$

# re-login or restart to take effect
# Settings / Keyboard / Input Sources / + / Chinese /
#  Chinese (Intelligent Pinyin) / Add
#

# disable suspend or hibernation
# automatic suspend - computer will suspend very soon because of inactivity
$ systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
$ gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'nothing'
$

Ctrl-S: freeze or pause terminal
Ctrl-Q: resume terminal
# it also conflicts with vi window split: Ctrl-W-S,

# hide "show apps" on dock
$ gsettings set org.gnome.shell.extensions.dash-to-dock show-show-apps-button false

# Left Super
$ gsettings get org.gnome.mutter overlay-key
'Super_L'
$ gsettings set org.gnome.mutter overlay-key ''
$

# settings / keyboard shortcuts
View split on left : Super + Left arrow
View split on right: Super + Left arrow
Restore window     : Super + Down arrow
Maximize window    : Super + Up arrow

# Error constructing proxy for org.gnome.Terminal
$ localectl set-locale LANG="en_US.UTF-8"

# or,
$ vi /etc/default/locale
LANG=en_US.UTF-8
$

# then restart
$ shutdown -r now
$

#

# https://askubuntu.com/questions/1201185/failed-to-connect-to-https-changelogs-ubuntu-com-meta-release-develpment ,
# Q: Failed to connect to https://changelogs.ubuntu.com/meta-release-develpment,
$ rm /var/lib/ubuntu-release-upgrader/release-upgrade-available
$ /usr/lib/ubuntu-release-upgrader/release-upgrade-motd

#
